/*
 * Copyright 2014-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.text.SimpleDateFormat

plugins {
    id 'groovy'
    id 'idea'
    id 'maven-publish'
    id 'java-gradle-plugin'
    id 'com.jfrog.bintray'               version '1.8.0'
    id 'net.nemerosa.versioning'         version '2.6.1'
    id 'com.github.ben-manes.versions'   version '0.17.0'
    id 'com.gradle.plugin-publish'       version '0.9.10'
    id 'com.github.hierynomus.license'   version '0.14.0'
    id 'com.github.kt3k.coveralls'       version '2.8.2'
    id 'com.github.johnrengelman.shadow' version '2.0.2'
}

Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
    buildRevision = versioning.info.commit
}

apply from: 'gradle/code-coverage.gradle'
apply from: 'gradle/code-quality.gradle'
apply from: 'gradle/publishing.gradle'

repositories {
    jcenter()
    flatDir { dir 'lib' }
}

configurations {
    uberjar
}

dependencies {
    compile gradleApi()
    uberjar ':clirr-core:0.6.2-uber'
    compile 'org.yaml:snakeyaml:1.20'

    testCompile 'junit:junit:4.12'
    testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    testCompile 'cglib:cglib-nodep:3.2.6'
    testCompile ':clirr-core:0.6.2-uber'
}

sourceSets {
    main {
        compileClasspath += configurations.uberjar
    }
}

tasks.withType(JavaCompile) {
    sourceCompatibility = projectSourceCompatibility
    targetCompatibility = projectTargetCompatibility
}

tasks.withType(GroovyCompile) {
    sourceCompatibility = projectSourceCompatibility
    targetCompatibility = projectTargetCompatibility
}

javadoc {
    classpath += configurations.uberjar
    excludes = ['**/*.html', 'META-INF/**']

    options.use         = true
    options.splitIndex  = true
    options.encoding    = 'UTF-8'
    options.author      = true
    options.version     = true
    options.windowTitle = "$project.name $project.version API"
    options.docTitle    = "$project.name $project.version API"
    options.links       = ['http://docs.oracle.com/javase/7/docs/api/']
}

task sourcesJar(type: Jar) {
    group 'Build'
    description 'An archive of the source code'
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    group 'Build'
    description 'An archive of the javadoc'
    classifier 'javadoc'
    from javadoc.destinationDir
}

jar.finalizedBy sourcesJar
jar.finalizedBy javadocJar

artifacts {
    sourcesJar
    javadocJar
}

task publishRelease(dependsOn: [bintrayUpload, publishPlugins]) {}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.uberjar]
    }
}

shadowJar {
    configurations = [project.configurations.uberjar]
    baseName = project.name
    classifier = ''

    manifest {
        attributes(
            'Built-By': System.properties['user.name'],
            'Created-By': System.properties['java.version'] + ' (' + System.properties['java.vendor'] + ' ' + System.properties["java.vm.version"] + ')',
            'Build-Date': project.buildDate,
            'Build-Time': project.buildTime,
            'Build-Revision': buildRevision,
            'Specification-Title': project.name,
            'Specification-Version': project.version,
            'Implementation-Title': project.name,
            'Implementation-Version': project.version
        )
    }
}

jar.finalizedBy shadowJar

